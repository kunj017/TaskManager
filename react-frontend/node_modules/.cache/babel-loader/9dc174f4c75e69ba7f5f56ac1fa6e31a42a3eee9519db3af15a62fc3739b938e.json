{"ast":null,"code":"var _jsxFileName = \"/Users/kunjtaneja/VSCodeProjects/helloworld/taskManager/react-frontend/src/components/Header.js\";\nimport React from \"react\";\n// import \"./Header.css\";\nimport { Stack, Button, AppBar, Toolbar, IconButton, Typography, Card, CardActions, Box, CardContent, CardHeader, Grid, TextField, InputAdornment, Fab, Checkbox } from \"@mui/material\";\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\nimport TaskIcon from \"@mui/icons-material/Task\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = () => {\n      this.setState(previousState => ({\n        numberOfTasks: previousState.numberOfTasks + 1\n      }));\n    };\n    this.state = {\n      numberOfTasks: 0\n    };\n  }\n  render() {\n    const navBarComponent = /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          edge: \"start\",\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(TaskAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            textAlign: \"left\"\n          },\n          children: \"Task Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n    const taskComponent = /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        },\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [navBarComponent, /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          justifyContent: \"center\",\n          my: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            raised: true,\n            sx: {\n              width: 500,\n              display: \"flex\",\n              flexDirection: \"column\"\n              // height: 250,\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              avatar: /*#__PURE__*/_jsxDEV(TaskAltIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this),\n              title: \"Create New Task\",\n              disableTypography: false,\n              sx: {\n                textAlign: \"left\",\n                backgroundColor: \"grey\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 25\n                    }, this)\n                  },\n                  sx: {\n                    flexGrow: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                  color: \"primary\",\n                  \"aria-label\": \"add\",\n                  sx: {\n                    ml: 2\n                  },\n                  onClick: this.handleClick,\n                  children: /*#__PURE__*/_jsxDEV(AddTaskIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"column\",\n                children: [...Array(this.state.numberOfTasks)].map(item => {\n                  return taskComponent;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Header;","map":{"version":3,"names":["React","Stack","Button","AppBar","Toolbar","IconButton","Typography","Card","CardActions","Box","CardContent","CardHeader","Grid","TextField","InputAdornment","Fab","Checkbox","TaskAltIcon","TaskIcon","AddTaskIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","Component","constructor","props","handleClick","setState","previousState","numberOfTasks","state","render","navBarComponent","position","children","size","edge","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","sx","flexGrow","textAlign","taskComponent","direction","InputProps","startAdornment","container","justifyContent","my","item","display","flexDirection","raised","width","avatar","title","disableTypography","backgroundColor","ml","onClick","Array","map"],"sources":["/Users/kunjtaneja/VSCodeProjects/helloworld/taskManager/react-frontend/src/components/Header.js"],"sourcesContent":["import React from \"react\";\n// import \"./Header.css\";\nimport {\n  Stack,\n  Button,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Card,\n  CardActions,\n  Box,\n  CardContent,\n  CardHeader,\n  Grid,\n  TextField,\n  InputAdornment,\n  Fab,\n  Checkbox,\n} from \"@mui/material\";\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\nimport TaskIcon from \"@mui/icons-material/Task\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      numberOfTasks: 0,\n    };\n  }\n  handleClick = () => {\n    this.setState((previousState) => ({\n      numberOfTasks: previousState.numberOfTasks + 1,\n    }));\n  };\n\n  render() {\n    const navBarComponent = (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton size=\"large\" edge=\"start\" color=\"inherit\">\n            <TaskAltIcon></TaskAltIcon>\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1, textAlign: \"left\" }}\n          >\n            Task Manager\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n\n    const taskComponent = (\n      <Stack direction=\"row\">\n        <Checkbox></Checkbox>\n        <TextField\n          variant=\"outlined\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <TaskIcon />\n              </InputAdornment>\n            ),\n          }}\n          sx={{ flexGrow: 1 }}\n        ></TextField>\n      </Stack>\n    );\n\n    return (\n      <>\n        {navBarComponent}\n\n        <Grid container sx={{ justifyContent: \"center\", my: 10 }}>\n          <Grid item sx={{ display: \"flex\", flexDirection: \"column\" }}>\n            <Card\n              raised={true}\n              sx={{\n                width: 500,\n                display: \"flex\",\n                flexDirection: \"column\",\n                // height: 250,\n              }}\n            >\n              <CardHeader\n                avatar={<TaskAltIcon></TaskAltIcon>}\n                title=\"Create New Task\"\n                disableTypography={false}\n                sx={{\n                  textAlign: \"left\",\n                  backgroundColor: \"grey\",\n                }}\n              ></CardHeader>\n              <CardContent>\n                <Stack direction=\"row\">\n                  <TextField\n                    variant=\"outlined\"\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <TaskIcon />\n                        </InputAdornment>\n                      ),\n                    }}\n                    sx={{ flexGrow: 1 }}\n                  ></TextField>\n                  <Fab\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    sx={{ ml: 2 }}\n                    onClick={this.handleClick}\n                  >\n                    <AddTaskIcon></AddTaskIcon>\n                  </Fab>\n                </Stack>\n              </CardContent>\n\n              <CardContent>\n                <Stack direction=\"column\">\n                  {[...Array(this.state.numberOfTasks)].map((item) => {\n                    return taskComponent;\n                  })}\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}